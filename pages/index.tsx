import * as React from 'react'
import Head from 'next/head'
import { useQuery } from '@apollo/client'

import UserInfo from '../components/userInfo'
import GitHubRepositoriesSection from '../components/githubRepositoriesSection'
import FavoriteRepositoriesSection from '../components/favRepositoriesSection'
import { GET_VIEWER_INFO } from '../lib/graphql/queries'

import type { NextPage } from 'next'
import { useFavRepos } from '../lib/hooks'

const Home: NextPage = () => {
  const { favRepos } = useFavRepos()
  const [activeTab, setActiveTab] = React.useState<
    'repos' | 'starred' | 'favorite'
  >('repos')

  const { data, loading, fetchMore } = useQuery(GET_VIEWER_INFO, {
    variables: {
      afterRepos: null,
      beforeRepos: null,
      afterStarredRepos: null,
      beforeStarredRepos: null,
    },
  })

  return (
    <>
      <Head>
        <title>My Profile | Homepage</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <section className='container mx-auto pt-16 flex'>
        {!data?.viewer || loading ? (
          <p>loading..</p>
        ) : (
          <div className='flex flex-col lg:flex-row w-full gap-2'>
            <UserInfo
              avatarUrl={data.viewer.avatarUrl}
              bio={data.viewer.bio}
              company={data.viewer.company}
              email={data.viewer.email}
              followers={data.viewer.followers.totalCount}
              following={data.viewer.following.totalCount}
              username={data.viewer.login}
              name={data.viewer.name}
            />
            <div className='w-full lg:w-3/5 xl:w-3/4'>
              <div className='w-full px-6 border-b py-3 flex space-x-4 mb-6'>
                <button
                  type='button'
                  onClick={() => setActiveTab('repos')}
                  className={`${
                    activeTab === 'repos'
                      ? 'text-gray-400 border-t-2 border-gray-400 text-lg'
                      : 'hover:text-gray-400'
                  }`}
                >
                  Repositories
                </button>
                <button
                  type='button'
                  onClick={() => setActiveTab('starred')}
                  className={`${
                    activeTab === 'starred'
                      ? 'text-gray-400 border-t-2 border-gray-400 text-lg'
                      : 'hover:text-gray-400'
                  }`}
                >
                  Starred Repositories
                </button>
                <button
                  type='button'
                  onClick={() => setActiveTab('favorite')}
                  className={`${
                    activeTab === 'favorite'
                      ? 'text-gray-400 border-t-2 border-gray-400 text-lg'
                      : 'hover:text-gray-400'
                  }`}
                >
                  Favorite Repositories
                </button>
              </div>
              {activeTab === 'repos' ? (
                <GitHubRepositoriesSection
                  repositories={data.viewer.repositories.edges}
                  pageInfo={data.viewer.repositories.pageInfo}
                  fetchMore={fetchMore}
                  tab='repos'
                />
              ) : null}
              {activeTab === 'starred' ? (
                <GitHubRepositoriesSection
                  repositories={data.viewer.starredRepositories.edges}
                  pageInfo={data.viewer.starredRepositories.pageInfo}
                  fetchMore={fetchMore}
                  tab='starred'
                />
              ) : null}
              {activeTab === 'favorite' ? (
                <>
                  {favRepos ? (
                    <FavoriteRepositoriesSection repositories={favRepos} />
                  ) : null}
                </>
              ) : null}
            </div>
          </div>
        )}
      </section>
    </>
  )
}

export default Home
