import * as React from 'react'
import { useRouter } from 'next/router'
import Head from 'next/head'
import { useLazyQuery } from '@apollo/client'
import ReactLoading from 'react-loading'

import { GET_USER } from '../../lib/graphql/queries'

const searchPage = () => {
  const router = useRouter()
  const [searchTerm, setSearchTerm] = React.useState('')
  const [errorMessage, setErrorMessage] = React.useState('')
  const [getUser, { loading, error }] = useLazyQuery(GET_USER)

  React.useEffect(() => {
    setErrorMessage('')
  }, [searchTerm])

  const handleSubmit = async (e: React.SyntheticEvent) => {
    e.preventDefault()

    const { data } = await getUser({
      variables: {
        login: searchTerm,
      },
    })

    if (!data?.user) {
      setErrorMessage(`The user your are trying to search doesn't exist`)
    } else {
      router.push(`/search/${data.user.login}`)
    }
  }
  return (
    <>
      <Head>
        <title>Search page</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <section className='w-full h-screen-16 flex flex-col items-center justify-center space-y-8'>
        <div className='w-full md:w-1/2 flex flex-col items-center space-y-4'>
          <h2 className='text-2xl'>
            Here you can search for any GitHub user you want!
          </h2>
          <h3 className='text-lx'>Just type a GitHub username</h3>
        </div>
        <form
          onSubmit={handleSubmit}
          className='flex flex-col items-center w-1/2 space-y-6'
        >
          <label htmlFor='search' className='w-full flex justify-center'>
            <input
              type='text'
              name='search'
              value={searchTerm}
              className='flex w-full lg:w-3/4 py-2 px-4 rounded-full text-xl outline-none text-cyan-900 focus:border-gray-900 border-2'
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </label>
          {errorMessage ? <p className='text-red-400'>{errorMessage}</p> : null}
          <button
            type='submit'
            className='bg-gray-700 text-2xl px-8 py-4 rounded-full text-white hover:bg-gray-900 transition-all duration-200 ease-out hover:scale-110'
            disabled={loading}
          >
            {loading ? (
              <ReactLoading
                type='spin'
                color='#ffffff'
                height={24}
                width={24}
              />
            ) : (
              'Search'
            )}
          </button>
        </form>
      </section>
    </>
  )
}

export default searchPage
